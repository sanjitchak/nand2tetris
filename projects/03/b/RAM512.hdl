// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address[0..2],a=a1,b=b1,c=c1,d=d1,e=e1,f=f1,g=g1,h=h1);
    RAM64(in=in,address=address[3..8],load=a1,out=out1);
   
    RAM64(in=in,address=address[3..8],load=b1,out=out2);
   
    RAM64(in=in,address=address[3..8],load=c1,out=out3);
   
    RAM64(in=in,address=address[3..8],load=d1,out=out4);
   
    RAM64(in=in,address=address[3..8],load=e1,out=out5);
   
    RAM64(in=in,address=address[3..8],load=f1,out=out6);
   
    RAM64(in=in,address=address[3..8],load=g1,out=out7);
   
    RAM64(in=in,address=address[3..8],load=h1,out=out8);
  Mux8Way16(a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8,sel=address[0..2],out=out); 
}
