//function type
(Sys.init)
//push const
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//call type
@return1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
A=A-1
A=A-1
A=A-1
A=A-1
A=A-1
D=A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(return1)
//label 
(WHILE)
//label jump compulsory 
@WHILE
0;JMP
//function type
(Main.fibonacci)
//push arg
@ARG
D=M
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push const
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
A=A-1
D=M
A=A+1
M=D-M
D=M
@LT0
D;JLT
@SP
A=M
A=A-1
M=0
@EXIT0
0;JMP
(LT0)
@SP
A=M
A=A-1
M=-1
(EXIT0)
//label jump 
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@IF_TRUE
D;JNE
//label jump compulsory 
@IF_FALSE
0;JMP
//label 
(IF_TRUE)
//push arg
@ARG
D=M
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return type
@LCL
D=M
@frame
M=D
A=M
A=A-1
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@retaddr
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
A=A+1
D=A
@SP
M=D
@frame
A=M
A=A-1
D=M
@THAT
M=D
@frame
A=M
A=A-1
A=A-1
D=M
@THIS
M=D
@frame
A=M
A=A-1
A=A-1
A=A-1
D=M
@ARG
M=D
@frame
A=M
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
@retaddr
A=M
0;JMP
//label 
(IF_FALSE)
//push arg
@ARG
D=M
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push const
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
A=A-1
D=M
A=A+1
M=D-M
D=M
A=A-1
M=D
//call type
@return2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
A=A-1
A=A-1
A=A-1
A=A-1
A=A-1
D=A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(return2)
//push arg
@ARG
D=M
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push const
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
A=A-1
D=M
A=A+1
M=D-M
D=M
A=A-1
M=D
//call type
@return3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
A=A-1
A=A-1
A=A-1
A=A-1
A=A-1
D=A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(return3)
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=D+M
//return type
@LCL
D=M
@frame
M=D
A=M
A=A-1
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@retaddr
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
A=A+1
D=A
@SP
M=D
@frame
A=M
A=A-1
D=M
@THAT
M=D
@frame
A=M
A=A-1
A=A-1
D=M
@THIS
M=D
@frame
A=M
A=A-1
A=A-1
A=A-1
D=M
@ARG
M=D
@frame
A=M
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
@retaddr
A=M
0;JMP
