function String.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 14
call Sys.error 1
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 0
push constant 1
add
call Array.new 1
pop this 0
label IF_END0
push constant 0
pop this 1
push pointer 0
return
function String.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function String.length 0
push argument 0
pop pointer 0
push this 1
return
function String.charAt 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function String.setCharAt 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function String.appendChar 0
push argument 0
pop pointer 0
push this 1
push this 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
push pointer 0
return
function String.eraseLastChar 0
push argument 0
pop pointer 0
push this 1
push constant 1
sub
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
sub
pop this 1
push constant 0
return
function String.intValue 4
push argument 0
pop pointer 0
push constant 0
pop local 3
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push pointer 0
call String.length 1
lt
not
if-goto WHILE_END0
push pointer 0
push local 2
call String.charAt 2
pop local 0
push local 0
push constant 45
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop local 3
label IF_FALSE0
push local 0
push constant 48
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 10
call Math.multiply 2
pop local 1
label IF_FALSE1
push local 0
push constant 49
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 1
add
pop local 1
label IF_FALSE2
push local 0
push constant 50
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 2
add
pop local 1
label IF_FALSE3
push local 0
push constant 51
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 3
add
pop local 1
label IF_FALSE4
push local 0
push constant 52
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 4
add
pop local 1
label IF_FALSE5
push local 0
push constant 53
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 5
add
pop local 1
label IF_FALSE6
push local 0
push constant 54
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 6
add
pop local 1
label IF_FALSE7
push local 0
push constant 55
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 7
add
pop local 1
label IF_FALSE8
push local 0
push constant 56
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 8
add
pop local 1
label IF_FALSE9
push local 0
push constant 57
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 9
add
pop local 1
label IF_FALSE10
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 3
push constant 1
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 1
push constant 1
neg
call Math.multiply 2
pop local 1
label IF_FALSE11
push local 1
return
function String.setInt 2
push argument 0
pop pointer 0
push constant 0
pop this 1
push argument 1
push constant 1
neg
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 1
neg
call Math.multiply 2
pop argument 1
push pointer 0
push constant 45
call String.appendChar 2
pop temp 0
label IF_FALSE0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push constant 1
pop local 0
push argument 1
pop local 1
label WHILE_EXP1
push local 1
push constant 9
gt
not
if-goto WHILE_END1
push local 1
push constant 10
call Math.divide 2
pop local 1
push local 0
push constant 10
call Math.multiply 2
pop local 0
goto WHILE_EXP1
label WHILE_END1
push pointer 0
push local 1
push constant 48
add
call String.appendChar 2
pop temp 0
push argument 1
push constant 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push argument 1
push local 1
push local 0
call Math.multiply 2
sub
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function String.modulus 0
push argument 0
push argument 0
push argument 1
call Math.divide 2
push argument 1
call Math.multiply 2
sub
return
function String.newLine 1
push constant 128
pop local 0
push local 0
return
function String.backSpace 1
push constant 129
pop local 0
push local 0
return
function String.doubleQuote 1
push constant 34
pop local 0
push local 0
return
