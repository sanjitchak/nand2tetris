function Keyboard.init 0
push constant 0
pop static 0
push constant 0
pop static 1
push constant 0
return
function Keyboard.keyPressed 0
push constant 24576
call Memory.peek 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push constant 24576
call Memory.peek 1
return
label IF_END0
function Keyboard.readChar 1
label WHILE_EXP0
call Keyboard.keyPressed 0
push constant 0
eq
not
if-goto WHILE_END0
goto WHILE_EXP0
label WHILE_END0
call Keyboard.keyPressed 0
pop local 0
label WHILE_EXP1
call Keyboard.keyPressed 0
push constant 0
eq
not
not
if-goto WHILE_END1
goto WHILE_EXP1
label WHILE_END1
push local 0
call Output.printChar 1
pop temp 0
push local 0
return
function Keyboard.readLine 2
push constant 60
call String.new 1
pop local 1
push argument 0
call Output.printString 1
pop temp 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
call Keyboard.readChar 0
pop local 0
push local 0
push constant 128
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Output.println 0
pop temp 0
push local 1
return
label IF_FALSE0
push local 0
push constant 129
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call String.eraseLastChar 1
pop temp 0
push local 1
call String.eraseLastChar 1
pop temp 0
call Output.backSpace 0
pop temp 0
goto IF_END1
label IF_FALSE1
push local 1
push local 0
call String.appendChar 2
pop temp 0
label IF_END1
goto WHILE_EXP0
label WHILE_END0
push local 1
return
function Keyboard.readInt 3
push constant 0
pop local 1
push constant 0
pop local 2
push argument 0
call Output.printString 1
pop temp 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
call Keyboard.readChar 0
pop local 0
push local 0
push constant 128
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Output.println 0
pop temp 0
push local 2
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 1
neg
call Math.multiply 2
pop local 1
label IF_FALSE1
push local 1
return
label IF_FALSE0
push local 0
push constant 129
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 10
call Math.divide 2
pop local 1
push local 1
push constant 10
call Math.divide 2
pop local 1
call Output.backSpace 0
pop temp 0
goto IF_END2
label IF_FALSE2
push local 0
push constant 58
lt
push local 0
push constant 47
gt
and
push local 0
push constant 45
eq
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 45
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
pop local 2
label IF_FALSE4
push local 0
push constant 48
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
push constant 10
call Math.multiply 2
pop local 1
label IF_FALSE5
push local 0
push constant 49
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 1
add
pop local 1
label IF_FALSE6
push local 0
push constant 50
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 2
add
pop local 1
label IF_FALSE7
push local 0
push constant 51
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 3
add
pop local 1
label IF_FALSE8
push local 0
push constant 52
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 4
add
pop local 1
label IF_FALSE9
push local 0
push constant 53
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 5
add
pop local 1
label IF_FALSE10
push local 0
push constant 54
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 6
add
pop local 1
label IF_FALSE11
push local 0
push constant 55
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 7
add
pop local 1
label IF_FALSE12
push local 0
push constant 56
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 8
add
pop local 1
label IF_FALSE13
push local 0
push constant 57
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push local 1
push constant 10
call Math.multiply 2
pop local 1
push local 1
push constant 9
add
pop local 1
label IF_FALSE14
goto IF_END3
label IF_FALSE3
push local 2
push constant 1
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push local 1
push constant 1
neg
call Math.multiply 2
pop local 1
label IF_FALSE15
push local 1
return
label IF_END3
label IF_END2
goto WHILE_EXP0
label WHILE_END0
push local 2
push constant 1
eq
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push local 1
push constant 1
neg
call Math.multiply 2
pop local 1
label IF_FALSE16
push local 1
return
